<Project Sdk="Microsoft.NET.Sdk.Web">

<!--  What is Web.Api (Presentation) -->
<!--  Defines entry point in the system -->
  
<!--  What belongs here? -->
<!--  REST API 
        - API Endpoints
        - Middleware
        - Dependency Injection Setup
-->
  
  <PropertyGroup>
    <UserSecretsId>7af30323-108a-4923-bd46-e13b7648968c</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
    <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.UI.Client" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" />
    <PackageReference Include="NSwag.AspNetCore" />
    <PackageReference Include="Serilog.AspNetCore" />
    <PackageReference Include="Serilog.Sinks.Seq" />
    <PackageReference Include="Swashbuckle.AspNetCore" />
    <PackageReference Include="NSwag.MSBuild">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>

  <!-- NSwag TypeScript Generation -->
  <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Debug'">
    <Exec Command="$(NSwagExe_Net90) run nswag.json /variables:Configuration=$(Configuration)" ContinueOnError="true" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" />
  </Target>

</Project>
